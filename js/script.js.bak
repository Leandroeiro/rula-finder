/* Author: 

*/

var jsonResponse;

$(document).ready(function() {
	// If there is a search string in the URL load it into the search box.
		var url = document.location.href;
		var search_string = url.lastIndexOf('s=');
		if(search_string > 0){
			search_string = url.substring(search_string+2);
			search_string = search_string.split('&');
			$('#s').val( unescape(search_string) );
			lookup();
		}
	
	//Search Function
		$('#s').keydown(function(e){

			if(e.keyCode == 13){
				e.preventDefault();
				document.location.hash = "#s="+escape($(this).val());		
			}			
		});
		$('#s').keyup(function(e){

			if( $('#s').val().length > 0 ){
				$('#status-empty').hide(500);
			} else{
				$('#status-empty').show(500);
				$('#status-3').hide();
				$('#status-2').hide();
				
			}
		});
		
		$(window).bind('hashchange', function() {
			var url = document.location.href;
			var search_string = url.lastIndexOf('s=');
			if(search_string > 0){
				search_string = url.substring(search_string+2);
				search_string = search_string.split('&');
				
				$('#s').val( unescape(search_string) );
				lookup();
				
			}
		});
	
});

var tipObj = {
	map_y: null,
	map_x: null,
	width: null,
	height: null
}

function lookup(){
	$('#s').attr('disabled', 'disabled');
	var search = $('#s').val().trim(),
		alsoOnline = '',
		d = new Date(),
		dTime = d.getTime();
	
	getResponse( 'call_no/'+search, function(response){
		
		var index = 0;
		jsonResponse = response;
		
		//If there is more then 1 result, load the first one which has location
		if(response.data.length > 1){
			for(i=0; i < response.data.length; i++){
				if(response.data[i].hasLocation == true){
					index = i;
					break;
				}
			}
		}
		var responseJSON = response.data[index];
	
		$('#status-3').hide();
		$('#status-2').hide();
		$('#status-empty').hide();
		$('#stack1').hide();
		$('#floors .selected').removeClass('selected');
		
		if(typeof responseJSON != 'undefined'){
			if(typeof responseJSON.title == 'undefined' ){
				responseJSON.title = '';
			}
			if(typeof responseJSON.author == 'undefined' ){
				responseJSON.author = '';
			}
			if(typeof responseJSON.location == "undefined"){
				responseJSON.location = '';
			}
			if(typeof responseJSON.cover_url == "undefined"){
				responseJSON.cover_url = '';
			}
			if(responseJSON.isOnline){
				alsoOnline = ' (This resource is also available online)';
			}
		}
		
		if(response.status == "1"){
		//status 1 (book found & data)
			$('#stack1 .pop-img'). attr('src', responseJSON.cover_url);
			$("<img/>") // Make in memory copy of image to avoid css issues
				.load(function() {
					if(this.width > 2){ //1px x 1px is returned if cover is not found, so make sure its bigger then this
						$('#stack1 .pop-img').show();
					} else{
						$('#stack1 .pop-img').hide();
					}
				}).attr("src", responseJSON.cover_url+'&real='+dTime); //The 'real' variable prevents caching (needed?)
			
			$('#stack1 .pop-title a').attr('href', 'http://catalogue.library.ryerson.ca/search/c?SEARCH='+responseJSON.callNumber+'&SUBMIT=Search').text(responseJSON.title);
			$('#stack1 .pop-desc').text(responseJSON.author);
			$('#stack1 .pop-other').text(responseJSON.availability+alsoOnline);
			$('#stack1 .pop-name').text("Shelf " + responseJSON.loc_name);
			
			//Shorten title if its over 60 characters
			if(responseJSON.title.length > 60){
				$('#stack1 .pop-title a').text(responseJSON.title.substring(0,60) + "...");
			}
			
			tipObj.map_y = responseJSON.map_y;
			tipObj.map_x = responseJSON.map_x;
			tipObj.width = responseJSON.width;
			tipObj.height = responseJSON.height;
			rePosition();
			$('#stack1').show().css('display', 'block');
			
			//Load the floor map
			$('#floor_img').show().attr('src', '').attr('src', responseJSON.img_url+'?=t'+dTime).load(function(){
				rePosition();
			});
			
			
			$('#floors .selected').removeClass('selected'); //Remove the selected floor
			$('#floors .alternate').removeClass('alternate'); //Remove the selected floor
			 

			//Select the current floor item is located on
			$('#floors li[data-fid="'+responseJSON.floor_id+'"]').addClass('selected');
			
			//Highlight other floors item may be located on
			$('#floors li').not('.selected').each(function() {
				for(i=0; i < response.data.length; i++){
					if(response.data[i].floor_id == $(this).attr('data-fid')){
						$(this).addClass('alternate');
					}
				}
			});
			
		} else if(response.status == "2"){
		//status 2 (found & no location)
		// a). Book that doesn't have a location and: b). An Ebook
			$('#floor_img').hide();
			$('#stack1').hide(); //Make sure previous results stay hidden
			
			if(responseJSON.availability == "ONLINE"){
				$('#status-2').html(
					'<h2>This is an Online Resource</h2>'+
					'<div class="ipad-pop">'+
						'<span>'+
							'<b></b>'+
							'<img class="pop-img" src="'+responseJSON.cover_url+'" alt="" width="66" height="100" />'+
							'<p class="pop-title"><a href="http://catalogue.library.ryerson.ca/search/c?SEARCH='+responseJSON.callNumber+'&SUBMIT=Search">'+responseJSON.title+'</a></p>'+
							'<p class="pop-desc">'+responseJSON.author+'</p>'+
							'<p class="pop-other secondary">'+responseJSON.location+alsoOnline+'</p>'+
						'</span>'+
						'<div style="clear:both"></div>'+
					'</div>'

				);
			} else{
				$('#stack1').hide(); //Make sure previous results stay hidden
				$('#status-2').html(
					'<h2>No Shelf Location Found!</h2>'+
					//'<p style="margin-bottom:10px;">We have not mapped this resource yet.</p>'+
					'<p style="margin-bottom:10px;"><a href="mailto:steven.marsden@ryerson.ca">Report</a> this page if you beleive it was an error</p>'+
					
					'<div class="ipad-pop">'+
						'<span>'+
							'<b></b>'+
							'<img class="pop-img" src="'+responseJSON.cover_url+'" alt="" width="66" height="100" />'+
							'<p class="pop-title"><a href="http://catalogue.library.ryerson.ca/search/c?SEARCH='+responseJSON.callNumber+'&SUBMIT=Search">'+responseJSON.title+'</a></p>'+
							'<p class="pop-desc">'+responseJSON.author+'</p>'+
							'<p class="pop-other secondary">'+responseJSON.location+alsoOnline+'</p>'+
						'</span>'+
						'<div style="clear:both"></div>'+
					'</div>'
				);
				$('#floors .selected').removeClass('selected');
				$('#floors li').each(function(index, value){
					if( responseJSON.location.indexOf($(this).text().substr(0,8)) > -1 ){
						
						$(this).addClass('selected');
					}
				});
			}
			$("<img/>") // Make in memory copy of image to avoid css issues
				.load(function() {
				if(this.width > 2){
						$('.pop-img').show();
					} else{
						$('.pop-img').hide();
					}
				}).attr("src", responseJSON.cover_url+'&real='+dTime);
			$('#status-2').show();
		} else if(response.status == "3" && $('#s').val != ''){
		//status 3 (not found)
			$('#floor_img').hide();
			$('#status-3').show();
		} else{
			$('#floor_img').hide();
			$('#status-empty').show();
		}
		$('#s').removeAttr('disabled');
		if(typeof responseJSON != 'undefined'){
			if(typeof responseJSON.cover_url == "undefined" || responseJSON.cover_url == ''){
				$('.pop-img').hide();
			}
		}
	});
}

window.onresize = function(event) {
    rePosition();
}


//Invert all the selected/alternate
$('.alternate').live('click', function() {
	console.log(jsonResponse);
	 $(this).animate({
    opacity: 0.25,
    left: '+=50',
    height: 'toggle'
  }, 1000, function() {
    // Animation complete.
  });
});




function rePosition(){
		var 	d = new Date(),
				dTime = d.getTime(),
				display = $('#stack1').css('display'),
				shiftLeft = (parseInt( $('#floor_img').css("border-left-width")  ) + parseInt( $('#map').css("padding-left")  ) ),
				shiftTop = (parseInt( $('#floor_img').css("border-top-width")  ) + parseInt( $('#map').css("padding-top")  ) );
				
			$("<img/>") // Make in memory copy of image to avoid css issues
				.load(function() {
					var pH =  $('#floor_img').height() / this.height;
					var pW = $('#floor_img').width() / this.width;
					var styleAttr = 'top:'+Math.round(tipObj.map_y*pH+shiftTop)+'px; left:'+Math.round(tipObj.map_x*pW+shiftLeft)+'px; width:'+Math.round(tipObj.width*pW)+'px; height:'+Math.round(tipObj.height *pH)+'px;';
					$('#stack1').attr('style', styleAttr);
					positionPop();
				}).attr("src", $('#floor_img').attr('src')+'?t='+dTime);

}

function positionPop(){

	//Positions the Tipsy thing
		var offset = 15,
			padding = 0,
			containX = $('#map').width(),
			topX = $('#stack1').position().left,
			width = $('#stack1').width(),
			height = $('#stack1').height(),
			topY = $('#stack1').position().top,
			placeX, placeY, tipDir;

		if (width < height && $('#floor_img').width() > 500) {
			placeX = width + offset - padding;
			placeY = (height / 2) - ($('#pop-container').height() / 2) - padding;
			tipDir = 'l';
			
			$('#pop-container').css('top', placeY).css('left', placeX);
			redrawTip('#pop-container .ipad-pop', tipDir);
			
		} else {
			placeX = (width / 2) - ($('#pop-container').width() / 2) - padding;
			placeY = height + offset - padding;
			tipDir = 't';
			$('#pop-container').css('top', placeY).css('left', placeX);
			$('#pop-container b').css('margin-left', -10);
			redrawTip('#pop-container .ipad-pop', tipDir);
			
			var doubleBack = containX - ( topX + padding + ($('#pop-container').width() / 2) + (width/2));
			if( doubleBack < 1){
				$('#pop-container').css('left', ( placeX + doubleBack - 1 ));
				$('#pop-container b').css('margin-left', (-10 - (doubleBack)));
			}
		}
}

function redrawTip(el, tipDir) {
	$(el).attr('data-tip', tipDir).removeClass('.ipad-pop').addClass('.ipad-pop');
}

function getResponse(apiCall, callback){
	var json = {}, d = new Date(), dTime = d.getTime();
	
	// Get data from the API b/c it's not stored
	$.ajax({
	  url: base_url+'api/'+apiCall,
	  dataType: 'jsonp',
	  success: function(data){
		data.time = dTime;
		callback(data);
	  }
	}).error(function(jqXHR, textStatus, errorThrown){
		var data = {
			time: 0,
			jqXHR: jqXHR, 
			textStatus: textStatus, 
			errorThrown: errorThrown
		}
		callback(data);
	});
	
}